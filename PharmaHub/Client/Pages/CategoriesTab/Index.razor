@page "/categories/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<h3 class=" = " card_title">Categories</h3>
<br />

<a href="/categories/create/" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Category
</a>
<br />
<br />

@if (Category == null)
{
    <div class="alert alert-info">Loading Categories...</div>
}
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in Category)
            {
                <tr>
                    <td>@category.CatName</td>
                    <td>@category.CatDescription</td>
                    <td>
                        <a href="categories/view/@category.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="categories/edit/@category.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(()=>Delete(category.Id))">
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    private List<Category>? Category;

    protected async override Task OnInitializedAsync()
    {
        Category = await _client.GetFromJsonAsync<List<Category>>($"{Endpoints.CategoriesEndpoint}");
    }


    async Task Delete(int CategoryID)
    {
        if (Category != null)
        {
            var category = Category.First(q => q.Id == CategoryID);
            var confirm = await js.InvokeAsync<bool>("confirm", "Do you want to delete this category?");
            if (confirm)
            {
                await _client.DeleteAsync($"{Endpoints.CategoriesEndpoint}/{CategoryID}");
                StateHasChanged();
            }
        }
    }
}